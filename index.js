const TelegramBot = require('node-telegram-bot-api')
const mysql = require('mysql2')
const config = require('./database')
const { telegram, api_bytez } = require('./config.json')
const bot = new TelegramBot(telegram.token, {polling: true})
const Bytez = require ('bytez.js')
const sdk = new Bytez(api_bytez.key)

const TimEout = 300 // –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∏–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

const Get_text_to_image = {} // –ü–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è


// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—á–µ—Ä–µ–¥–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç AI
const mysqlPool = mysql.createPool(config)
global.pool = mysqlPool.promise()

// –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –≤ –±–æ–∫–æ–≤–æ–º –º–µ–Ω—é
async function setBotMenu() {
    await bot.setMyCommands([
        { command: '/text_to_image', description: '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' }
    ]);
}
setBotMenu()


// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
async function Text_to_Image(text) {
    try {
        const model = sdk.model("stabilityai/stable-diffusion-xl-base-1.0")
        const { error, output } = await model.run(text)

        if (error) {
            throw new Error(error)
        }
        
        return output
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –≤ Text_to_Image:", error);
        return 1
    }
}


bot.on('message', async (msg) => {
    
    const text = msg.text
    const chatId = msg.from.id


    if(text === '/text_to_image') {

        bot.sendMessage(chatId, '–û—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')

        setTimeout( async () => {
                Get_text_to_image[chatId] = true;
        }, TimEout);

    }

    if(Get_text_to_image[chatId]){

        await global.pool.query(`INSERT INTO Queue (author_telegram_id, text, type) VALUES (?, ?, ?)`, [chatId, text, 'text_to_image']);

        bot.sendMessage(chatId, 'üïî –ó–∞–¥–∞—á–∞ –ø–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å...')

        delete Get_text_to_image[chatId];
    }

})


//–†–∞–∑ –≤ 15 —Å–µ–∫—É–Ω–¥ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—á–µ—Ä–µ–¥—å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
setInterval( async () => {
    
    const [Processing] = await global.pool.query("SELECT * FROM Queue WHERE status = ? LIMIT 1", ['Processing'])

    if(Processing[0]) return

    const [Get_Queue] = await global.pool.query("SELECT id, type, text, author_telegram_id FROM Queue WHERE status != ? ORDER BY id asc LIMIT 1", ['DONE'])

    if(Get_Queue[0]){

        //–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø–∞–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        if(Get_Queue[0].type === 'text_to_image') {

            await global.pool.query("UPDATE Queue SET status = ? WHERE id = ?", ['Processing', Get_Queue[0].id])

            await bot.sendMessage(Get_Queue[0].author_telegram_id, 'üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...')

            const aiResponse = await Text_to_Image(Get_Queue[0].text);

            if(aiResponse === 1){
                await global.pool.query("UPDATE Queue SET status = ? WHERE id = ?", ['DONE', Get_Queue[0].id])
                bot.sendMessage(Get_Queue[0].author_telegram_id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
            } else {
                await global.pool.query("UPDATE Queue SET status = ? WHERE id = ?", ['DONE', Get_Queue[0].id])
                bot.sendPhoto(Get_Queue[0].author_telegram_id, aiResponse)
            }
        }

    } else {
        return console.log('–û—á–µ—Ä–µ–¥—å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—É—Å—Ç–∞')
    }

}, 15000);